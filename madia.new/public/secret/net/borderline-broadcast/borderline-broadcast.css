body {
  background: radial-gradient(circle at top left, rgba(56, 248, 122, 0.12), transparent 55%), var(--net-bg);
}

.execute-button {
  margin-top: 0.75rem;
}

.topology-panel {
  margin-top: 1.5rem;
  display: grid;
  gap: 1rem;
}

.topology {
  position: relative;
  min-height: 14rem;
  border: 1px solid rgba(102, 255, 198, 0.4);
  background: linear-gradient(135deg, rgba(0, 32, 32, 0.8), rgba(0, 12, 24, 0.9));
  overflow: hidden;
}

.topology::before {
  content: "";
  position: absolute;
  inset: 0;
  background-image: linear-gradient(rgba(64, 154, 106, 0.08) 1px, transparent 1px),
    linear-gradient(90deg, rgba(64, 154, 106, 0.08) 1px, transparent 1px);
  background-size: 32px 32px;
  mix-blend-mode: screen;
}

.node {
  position: absolute;
  width: 7rem;
  height: 7rem;
  border: 1px solid rgba(132, 255, 210, 0.7);
  background: rgba(0, 48, 44, 0.9);
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 0.5rem;
  border-radius: 50%;
  box-shadow: 0 0 15px rgba(38, 255, 186, 0.25);
  animation: idleGlow 4s linear infinite;
}

.node[data-node="backbone"] {
  left: 1.5rem;
  top: 50%;
  transform: translateY(-50%);
}

.node[data-node="fiber-ring"] {
  right: 2rem;
  top: 2rem;
}

.node[data-node="frame-relay"] {
  right: 2rem;
  bottom: 2rem;
}

.node[data-state="active"] {
  border-color: var(--status-success);
  box-shadow: 0 0 25px rgba(78, 255, 206, 0.5);
}

.node[data-state="warning"] {
  border-color: var(--status-warning);
  box-shadow: 0 0 20px rgba(255, 190, 80, 0.5);
  animation: alarmBlink 0.8s linear infinite;
}

.node[data-state="offline"] {
  border-color: rgba(80, 80, 80, 0.8);
  background: rgba(10, 10, 12, 0.9);
  box-shadow: none;
  animation: none;
  opacity: 0.7;
}

.node-label {
  font-size: 0.9rem;
  line-height: 1.2;
}

.link {
  position: absolute;
  height: 4px;
  background: linear-gradient(90deg, rgba(46, 192, 168, 0.9), rgba(128, 255, 220, 0.4));
  box-shadow: 0 0 12px rgba(56, 192, 160, 0.45);
  transform-origin: left center;
  animation: signalFlow 1.6s linear infinite;
}

.link[data-link="primary"] {
  left: 7.5rem;
  top: 5rem;
  width: 11rem;
  transform: rotate(-12deg);
}

.link[data-link="backup"] {
  left: 7.5rem;
  bottom: 5rem;
  width: 11rem;
  transform: rotate(12deg);
}

.link[data-state="congested"] {
  background: linear-gradient(90deg, rgba(255, 120, 120, 0.9), rgba(255, 196, 120, 0.5));
  box-shadow: 0 0 14px rgba(255, 120, 120, 0.6);
  animation-duration: 0.8s;
}

.link[data-state="idle"] {
  opacity: 0.6;
  animation-duration: 2.4s;
}

.event-feed {
  margin: 0;
  list-style: none;
  padding: 0;
  display: grid;
  gap: 0.35rem;
  max-height: 9rem;
  overflow: auto;
}

.event-feed li {
  font-family: var(--font-mono);
  font-size: 0.85rem;
  color: var(--text-muted);
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.event-feed li::before {
  content: "â–¶";
  color: rgba(102, 255, 198, 0.75);
  font-size: 0.75rem;
}

.event-feed li[data-variant="error"] {
  color: var(--status-error);
}

.event-feed li[data-variant="success"] {
  color: var(--status-success);
}

.bgp-visual {
  margin-top: 1.25rem;
  padding: 1rem 1.25rem;
  border: 1px solid rgba(56, 248, 122, 0.25);
  border-radius: 12px;
  background: linear-gradient(135deg, rgba(5, 14, 26, 0.9), rgba(6, 18, 36, 0.95));
  position: relative;
  overflow: hidden;
}

.bgp-map {
  position: relative;
  height: 120px;
  display: grid;
  place-items: center;
}

.bgp-node {
  position: absolute;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  background: rgba(56, 248, 122, 0.5);
  box-shadow: 0 0 16px rgba(56, 248, 122, 0.6);
  opacity: 0.8;
  --node-position: translate(0, 0);
  transform: var(--node-position);
  transform-origin: center;
}

.node-core {
  top: 50%;
  left: 50%;
  --node-position: translate(-50%, -50%);
}

.node-edge {
  top: 20%;
  right: 18%;
}

.node-backup {
  bottom: 16%;
  left: 12%;
}

.bgp-link {
  position: absolute;
  border-radius: 999px;
  background: linear-gradient(90deg, rgba(56, 248, 122, 0), rgba(56, 248, 122, 0.9), rgba(56, 248, 122, 0));
  opacity: 0.15;
}

.link-a {
  width: 60%;
  height: 2px;
  top: 50%;
  left: 20%;
  transform: rotate(12deg);
}

.link-b {
  width: 52%;
  height: 2px;
  top: 38%;
  left: 26%;
  transform: rotate(-22deg);
}

.link-c {
  width: 48%;
  height: 2px;
  bottom: 28%;
  left: 22%;
  transform: rotate(18deg);
}

.visual-caption {
  margin: 0.75rem 0 0;
  font-size: 0.85rem;
  color: rgba(148, 197, 183, 0.82);
  text-transform: uppercase;
  letter-spacing: 0.1em;
}

.bgp-visual[data-state="processing"] .bgp-link {
  opacity: 0.5;
  animation: bgp-flow 2s linear infinite;
}

.bgp-visual[data-state="processing"] .bgp-node {
  animation: bgp-node-pulse 1.6s ease-in-out infinite;
}

.bgp-visual[data-state="success"] {
  border-color: rgba(56, 248, 122, 0.75);
  box-shadow: 0 0 30px rgba(56, 248, 122, 0.28);
}

.bgp-visual[data-state="success"] .bgp-link {
  opacity: 0.8;
  animation: bgp-stable 1.8s ease-in-out infinite;
}

.bgp-visual[data-state="error"] {
  border-color: rgba(255, 95, 109, 0.6);
  box-shadow: 0 0 22px rgba(255, 95, 109, 0.3);
  animation: bgp-jitter 0.6s ease;
}

.bgp-visual[data-state="error"] .bgp-node {
  background: rgba(255, 95, 109, 0.7);
  box-shadow: 0 0 16px rgba(255, 95, 109, 0.5);
}

@keyframes bgp-flow {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 200% 50%;
  }
}

@keyframes bgp-node-pulse {
  0%,
  100% {
    transform: var(--node-position) scale(1);
  }
  50% {
    transform: var(--node-position) scale(1.25);
  }
}

@keyframes bgp-stable {
  0%,
  100% {
    opacity: 0.6;
  }
  50% {
    opacity: 0.9;
  }
}

@keyframes bgp-jitter {
  0%,
  100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-4px);
  }
  75% {
    transform: translateX(4px);
  }
}

@keyframes signalFlow {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 10rem 0;
  }
}

@keyframes idleGlow {
  0%,
  100% {
    box-shadow: 0 0 12px rgba(56, 192, 160, 0.35);
  }
  50% {
    box-shadow: 0 0 20px rgba(98, 255, 208, 0.55);
  }
}

@keyframes alarmBlink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.4;
  }
}
